local boat = script.Parent
local seat = boat.PrimaryPart

-- Create a VectorForce and a Torque to control the boat
local vectorForce = Instance.new("VectorForce")
vectorForce.ApplyAtCenterOfMass = true
vectorForce.Attachment0 = seat
vectorForce.Force = Vector3.new()
vectorForce.RelativeTo = Enum.ActuatorRelativeTo.Attachment0
vectorForce.Parent = seat

local torque = Instance.new("Torque")
torque.RelativeTo = Enum.ActuatorRelativeTo.Attachment0
torque.Attachment0 = seat
torque.Torque = Vector3.new()
torque.Parent = seat

-- Create a function to get the center of mass of the boat
local function getCenterOfMass(parts)
    local totalMass = 0
    local sumOfMasses = Vector3.new(0, 0, 0)
    for i = 1, #parts do
        local part = parts[i]
        totalMass = totalMass + part:GetMass()
        sumOfMasses = sumOfMasses + part:GetMass() * part.Position
    end
    return sumOfMasses / totalMass, totalMass
end

-- Create a function to get the back vector of the boat
local function getBackVector(cframe)
    local _, _, _, _, _, r6, _, _, r9, _, _, r12 = cframe:components()
    return Vector3.new(r6, r9, r12)
end

-- Create a function to get the rotation in the XZ plane
local function getRotationInXZPlane(cframe)
    local back = getBackVector(cframe)
    return CFrame.new(cframe.x, cframe.y, cframe.z, Vector3.new(0, 1, 0), back.unit)
end

-- Create a function to get all parts of the boat
local function getParts(parent)
    local parts = {}
    local descendants = parent:GetDescendants()
    for i = 1, #descendants do
        local part = descendants[i]
        if part:IsA("BasePart") then
            parts[#parts + 1] = part
        end
    end
    return parts
end

-- Get the center of mass and total mass of the boat
local parts = getParts(boat)
local centerOfMass, totalMass = getCenterOfMass(parts)

-- Create a part to represent the center of mass
local center = Instance.new("Part")
center.Anchored = true
center.Name = "CenterPart"
center.CanCollide = false
center.Archivable = false
center.Size = Vector3.new()
center.Transparency = 1
center.CFrame = getRotationInXZPlane(seat.CFrame - seat.CFrame.p) + centerOfMass
center.Parent = boat

-- Create an attachment for the VectorForce and Torque
local attachment = Instance.new("Attachment")
attachment.CFrame = center.CFrame
attachment.Position = Vector3.new()
attachment.Parent = center

-- Listen for input from the player
seat:GetPropertyChangedSignal("Throttle"):Connect(function()
    vectorForce.Force = Vector3.new(0, 0, 5000 * seat.ThrottleFloat)
end)

seat:GetPropertyChangedSignal("SteerFloat"):Connect(function()
    torque.Torque = Vector3.new(0, 25 * seat.SteerFloat, 0)
end)
